{"version":3,"sources":["react_logo.jpg","App.js","serviceWorker.js","pages/Gans.js","pages/Gitpages.js","index.js"],"names":["module","exports","App","className","exact","activeClassName","style","color","to","Boolean","window","location","hostname","match","Gans","Gitpages","src","react_logo","alt","height","width","href","id","class","ReactDOM","render","StrictMode","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,wC,+KC2D5BC,MAvDf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAEhB,2BACE,qDAAmC,6BACnC,6DAEF,yBAAKA,UAAU,SACb,2BAAG,2FACQ,0BAAMA,UAAU,SAAhB,kBACX,2BAAG,wFACH,2BAAG,8BAAM,0BAAMA,UAAU,SAAhB,YAAN,YACH,2BAAG,wFACG,0BAAMA,UAAU,SAAhB,YACN,2BAAG,wFACH,2BAAG,wFACH,2BAAG,wFACG,0BAAMA,UAAU,SAAhB,aAEN,2BAAG,uFACH,2BAAG,uFAEH,2BAAG,2FACQ,0BAAMA,UAAU,YAAW,kBAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,MAAO,CAACC,MAAO,QAASC,GAAG,SAAnE,iCACtC,2BAAG,wFACH,2BAAG,8BAAM,0BAAML,UAAU,YAAhB,YAAN,YACH,2BAAG,wFACG,0BAAMA,UAAU,YAAW,kBAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,MAAO,CAACC,MAAO,QAASC,GAAG,aAAnE,qCACjC,2BAAG,wFACH,2BAAG,wFACH,2BAAG,wFACG,0BAAML,UAAU,YAAhB,uBAEN,2BAAG,uFACH,2BAAG,uFAEH,2BAAG,2FACQ,0BAAMA,UAAU,QAAhB,yBACX,2BAAG,wFACH,2BAAG,8BAAM,0BAAMA,UAAU,QAAhB,UAAN,gBACH,2BAAG,wFACG,0BAAMA,UAAU,QAAhB,0BACN,2BAAG,wFACH,2BAAG,wFACH,2BAAG,wFACG,0BAAMA,UAAU,QAAhB,8B,OCvCIM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCFSC,MAXf,WACE,OACE,yBAAKX,UAAU,OACb,4BAAQA,UAAU,cAChB,uBAAGA,UAAU,cAAa,8BAAM,kBAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,MAAO,CAACC,MAAO,QAASC,GAAG,KAAnE,YAAN,YAE1B,uE,iBCsBOO,MAzBf,WACE,OACE,yBAAKZ,UAAU,OACb,4BAAQA,UAAU,cAChB,uBAAGA,UAAU,cAAa,8BAAM,kBAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,MAAO,CAACC,MAAO,QAASC,GAAG,KAAnE,YAAN,iBAE1B,2BAAG,sFACH,yBAAKQ,IAAKC,IAAYC,IAAI,aAAaC,OAAO,MAAMC,MAAM,QAC1D,uBAAGjB,UAAU,YAAW,8BAAM,0BAAMA,UAAU,OAAM,uBAAGkB,KAAK,aAAR,aAA5B,OAA0E,0BAAMlB,UAAU,UAAhB,iBAA1E,OAA8H,0BAAMA,UAAU,SAAhB,uBAA9H,OAAuL,0BAAMA,UAAU,SAAhB,qBAAvL,OAA8O,0BAAMA,UAAU,OAAhB,cAEtQ,uBAAGmB,GAAG,WAAWnB,UAAU,WAA3B,YACA,uBAAGoB,MAAM,QAAT,yNAEA,uBAAGD,GAAG,WAAWnB,UAAU,WAA3B,iBAEA,uBAAGmB,GAAG,WAAWnB,UAAU,WAA3B,iCAEA,uBAAGmB,GAAG,WAAWnB,UAAU,WAA3B,qCAEA,uBAAGmB,GAAG,WAAWnB,UAAU,WAA3B,eCjBRqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACM,yBAAKvB,UAAU,WACb,kBAAC,IAAD,CAAOC,OAAK,EAACuB,KAAK,IAAIC,UAAW1B,IACjC,kBAAC,IAAD,CAAOyB,KAAK,QAAQC,UAAWd,IAC/B,kBAAC,IAAD,CAAOa,KAAK,YAAYC,UAAWb,OAI7Cc,SAASC,eAAe,SH+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.311891da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react_logo.7bdceb15.jpg\";","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <p>\n          <code>&gt; Michaela Buchanan</code><br />\n          <code>==========================</code>\n        </p>\n        <div className=\"links\">\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          &nbsp;___  <span className=\"about\">Introduction</span></code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code><span className=\"about\">About Me</span>  ----|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          |___  <span className=\"about\">Resume</span></code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          |___  <span className=\"about\">Contact</span></code></p>\n\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></p>\n\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          &nbsp;___  <span className=\"articles\"><NavLink exact activeClassName=\"active\" style={{color: 'cyan'}} to=\"/gans\">GANs Sports Car Generation</NavLink></span></code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code><span className=\"articles\">Articles</span>  ----|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          |___  <span className=\"articles\"><NavLink exact activeClassName=\"active\" style={{color: 'cyan'}} to=\"/gitpages\">Host React App on Github Pages</NavLink></span></code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          |___  <span className=\"articles\">More coming soon!</span></code></p>\n\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></p>\n\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          &nbsp;___  <span className=\"cars\">1G DSM Street Build</span></code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code><span className=\"cars\">Garage</span> &nbsp; ----|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          |___  <span className=\"cars\">LS1 Camaro Drift Car</span></code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</code></p>\n          <p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          |___  <span className=\"cars\">Yamaha R3 Track Bike</span></code></p>\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport './Article.css';\n\nfunction Gans() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p className=\"breadcrumb\"><code><NavLink exact activeClassName=\"active\" style={{color: 'cyan'}} to=\"/\">Articles</NavLink> &gt; GANs</code></p>\n\n        <p>Generating New Sports Cars using GANs</p>\n      </header>\n    </div>\n  );\n}\nexport default Gans;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport Paper from '@material-ui/core/Paper';\n\nimport react_logo from \"../react_logo.jpg\"\n\nimport './Article.css';\n\nfunction Gitpages() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p className=\"breadcrumb\"><code><NavLink exact activeClassName=\"active\" style={{color: 'cyan'}} to=\"/\">Articles</NavLink> &gt; Git-Pages</code></p>\n\n        <p><strong>How to host your React app on Git-Pages for free </strong></p>\n        <img src={react_logo} alt=\"react logo\" height=\"350\" width=\"500\"/>\n        <p className=\"contents\"><code><span className=\"red\"><a href=\"#overview\">Overview</a></span> -&gt; <span className=\"yellow\">Prerequisites</span> -&gt; <span className=\"green\">Setup React Project</span> -&gt; <span className=\"green\">Setup GitHub Repo</span> -&gt; <span className=\"red\">Comments</span></code></p>\n\n        <p id=\"overview\" className=\"subject\">Overview</p>\n        <p class=\"text\">Are you looking for a free hosting service for your React application? If the application is for personal or development use, then GitPages may be a great alternative to more traditional website hosting services. </p>\n\n        <p id=\"overview\" className=\"subject\">Prerequisites</p>\n\n        <p id=\"overview\" className=\"subject\">Setting Up Your React Project</p>\n\n        <p id=\"overview\" className=\"subject\">Setting Up Your Github Repository</p>\n\n        <p id=\"overview\" className=\"subject\">Comments</p>\n\n      </header>\n    </div>\n  );\n}\nexport default Gitpages;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Route, HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Gans from './pages/Gans'\nimport Gitpages from './pages/Gitpages'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n          <div className=\"content\">\n            <Route exact path=\"/\" component={App}/>\n            <Route path=\"/gans\" component={Gans}/>\n            <Route path=\"/gitpages\" component={Gitpages}/>\n          </div>\n        </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}